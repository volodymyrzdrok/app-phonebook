{"version":3,"file":"static/js/734.36955af0.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.jsx","hooks/useRouteRedirect.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import {\n  FormControl,\n  Typography,\n  FormLabel,\n  Input,\n  Button,\n  Sheet,\n  CssVarsProvider,\n} from '@mui/joy';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst AuthForm = ({ title, subTitle, onSubmitFunc, authType }) => {\n  const formik = useFormik({\n    initialValues:\n      authType === 'register'\n        ? {\n            name: '',\n            email: '',\n            password: '',\n          }\n        : {\n            email: '',\n            password: '',\n          },\n\n    validationSchema: SignupSchema(authType),\n    onSubmit: values => {\n      onSubmitFunc(values);\n    },\n  });\n\n  const { errors, touched } = formik;\n  return (\n    <CssVarsProvider>\n      <Sheet\n        onSubmit={formik.handleSubmit}\n        component=\"form\"\n        sx={{\n          width: 400,\n          mx: 'auto',\n          my: 4,\n          py: 3,\n          px: 2,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n          borderRadius: 'sm',\n          boxShadow: 'md',\n        }}\n        variant=\"outlined\"\n      >\n        <div>\n          <Typography level=\"h4\" component=\"h1\">\n            <b>{title}</b>\n          </Typography>\n          <Typography level=\"body2\">{subTitle} to continue.</Typography>\n        </div>\n\n        {authType === 'register' && (\n          <FormControl>\n            <FormLabel>\n              Name\n              <Typography sx={{ color: 'red', fontSize: 10, ml: 3 }}>\n                {errors.name && touched.name ? errors.name : null}\n              </Typography>\n            </FormLabel>\n            <Input\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Name and surname\"\n              onChange={formik.handleChange}\n              value={formik.values.name}\n            />\n          </FormControl>\n        )}\n        <FormControl>\n          <FormLabel>\n            Email\n            <Typography sx={{ color: 'red', fontSize: 10, ml: 3 }}>\n              {errors.email && touched.email ? errors.email : null}\n            </Typography>\n          </FormLabel>\n          <Input\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"johndoe@email.com\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n        </FormControl>\n        <FormControl>\n          <FormLabel>\n            Password\n            <Typography sx={{ color: 'red', fontSize: 10, ml: 3 }}>\n              {errors.password && touched.password ? errors.password : null}\n            </Typography>\n          </FormLabel>\n          <Input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n        </FormControl>\n\n        <Button type=\"submit\" sx={{ mt: 1 }}>\n          {subTitle}\n        </Button>\n      </Sheet>\n    </CssVarsProvider>\n  );\n};\n\nexport default AuthForm;\n\nfunction SignupSchema(authType) {\n  const defaultValidate = {\n    email: Yup.string()\n      .min(2, 'Too Short!')\n      .max(50, 'Too Long!')\n      .matches(\n        '[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$',\n        'must be a valid email'\n      )\n      .required(),\n    password: Yup.string().min(8, 'Too Short!').max(50, 'Too Long!').required(),\n  };\n\n  return Yup.object().shape(\n    authType === 'register'\n      ? {\n          name: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .matches(\n              \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n              'only letters!'\n            )\n            .required(),\n\n          ...defaultValidate,\n        }\n      : defaultValidate\n  );\n}\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { selectAuthStatus } from 'redux/auth/authSlise';\n\nexport const useRouteRedirect = (statusBool, pathName) => {\n  const navigate = useNavigate();\n  const authStatus = useSelector(selectAuthStatus);\n\n  useEffect(() => {\n    if (authStatus === statusBool) {\n      navigate(pathName, { replace: true });\n    }\n  }, [navigate, authStatus, pathName, statusBool]);\n};\n","import { useDispatch } from 'react-redux';\nimport AuthForm from 'components/AuthForm/AuthForm';\nimport { loginUser } from 'redux/auth/authOperations';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = userDataValue => {\n    const { email, password } = userDataValue;\n    dispatch(loginUser({ email, password }));\n  };\n\n  return (\n    <>\n      <AuthForm\n        authType=\"login\"\n        title=\"Log In\"\n        subTitle=\"Sign In\"\n        onSubmitFunc={onSubmit}\n      />\n    </>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport routes from 'constants/routes';\nimport { useRouteRedirect } from 'hooks/useRouteRedirect';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { resetAuthError, selectAuthError } from 'redux/auth/authSlise';\n\nconst Login = () => {\n  useRouteRedirect(true, routes.contacts);\n\n  const dispatch = useDispatch();\n  const errorAuth = useSelector(selectAuthError);\n\n  useEffect(() => {\n    if (errorAuth === 'Request failed with status code 400') {\n      toast.warning('Invalid Email or Password', settingAlert());\n      dispatch(resetAuthError());\n    }\n  }, [errorAuth, dispatch]);\n\n  return (\n    <>\n      <LoginForm />\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Login;\n\nfunction settingAlert() {\n  return {\n    position: 'top-right',\n    autoClose: 1500,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  };\n}\n"],"names":["SignupSchema","authType","defaultValidate","email","Yup","min","max","matches","required","password","shape","name","title","subTitle","onSubmitFunc","formik","useFormik","initialValues","validationSchema","onSubmit","values","errors","touched","handleSubmit","component","sx","width","mx","my","py","px","display","flexDirection","gap","borderRadius","boxShadow","variant","level","color","fontSize","ml","type","placeholder","onChange","handleChange","value","mt","useRouteRedirect","statusBool","pathName","navigate","useNavigate","authStatus","useSelector","selectAuthStatus","useEffect","replace","dispatch","useDispatch","AuthForm","userDataValue","loginUser","routes","errorAuth","selectAuthError","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","resetAuthError"],"sourceRoot":""}